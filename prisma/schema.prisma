
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}


datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  name     String?
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  contact   String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sales     Sale[]
}

model Supplier {
  id        Int      @id @default(autoincrement())
  name      String
  contact   String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  purchases Purchase[]
}

model Employee {
  id        Int      @id @default(autoincrement())
  name      String
  position  String?
  contact   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  description String?
  price     Float
  stock     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  purchases PurchaseItem[]
  sales     SaleItem[]
}

model Sale {
  id        Int      @id @default(autoincrement())
  date      DateTime @default(now())
  customerId Int
  customer  Customer @relation(fields: [customerId], references: [id])
  totalAmount Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items     SaleItem[]
}

model SaleItem {
  id        Int      @id @default(autoincrement())
  saleId    Int
  sale      Sale     @relation(fields: [saleId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Purchase {
  id        Int      @id @default(autoincrement())
  date      DateTime @default(now())
  supplierId Int
  supplier  Supplier @relation(fields: [supplierId], references: [id])
  totalAmount Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items     PurchaseItem[]
}

model PurchaseItem {
  id        Int      @id @default(autoincrement())
  purchaseId Int
  purchase  Purchase @relation(fields: [purchaseId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
